### Variables

  set {
    # Use Mod4 for Logo key. Use Mod1 for Alt.
    $mod Mod1
    $logoMod Mod4
    # Home row direction keys, like vim
    $left h
    $down j
    $up k
    $right l
    # terminal emulator
    $term foot
    # fonts
    $uiFont Hack Nerd Font Mono
    $nerdish Nerd Font Mono
    # $statusFont ShureTechMono Nerd Font Mono
    $statusFont Share Tech Mono
    # styles
    $text #e4e4e4
    $inactiveText #808080
    $hiBackground #8787ffe0
    $midBackground #303030e0
    $loBackground #1c1c1ce0
    $hideout #080808
    $transparent #30303000
    $prompt #5f87ff
    $highlight #18afb0
    $supaHighlight #ff5fff
    # application launcher
    $menu bemenu-run \
      --fn "$statusFont 28" \
      --auto-select \
      --ignorecase \
      --list 3 \
      --hp 50 \
      --width-factor 0.3 \
      -p "â–¶" \
      --tb "$hideout" \
      --tf "$prompt" \
      --fb "$hideout" \
      --cb "$hideout" \
      --nb "$hideout" \
      --hb "$hideout" \
      --hf "$highlight" \
      --fbb "$hideout" \
      --sb "$hideout" \
      --sf "$highlight" \
      --ab "$hideout" \
      --scf "$highlight" | xargs swaymsg exec
    # displays
    $laptop LVDS-1
    $monitor DP-1
    # $wallpaper /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png
    $wallpaper ~/bg/downtown-superboys-11
    # nag
    $nag         swaynagmode
    $nag_exit    $nag --exit
    $nag_confirm $nag --confirm
    $nag_select  $nag --select
  }

### UI configuration

  # # -R is recommended for swaynag_command so that, upon a syntax error in your sway config, the
  #   # 'Reload Sway' option will be initially selected instead of the 'Exit Sway' option
  title_align center
  font pango:$uiFont 20
  gaps inner 5
  swaynag_command $nag -R
  client.focused $hiBackground $hiBackground $hideout $supaHighlight
  client.focused_inactive $midBackground $midBackground $prompt
  client.unfocused $loBackground $loBackground $prompt

  # xwayland
  for_window [window_role="About"] floating enable
  for_window [window_role="Preferences"] floating enable
  for_window [window_role="bubble"] floating enable
  for_window [window_role="pop-up"] floating enable
  for_window [window_role="task_dialog"] floating enable
  for_window [window_type="dialog"] floating enable
  for_window [window_type="menu"] floating enable
  for_window [window_type="popup_menu"] floating enable
  for_window [window_type="splash"] floating enable
  # wayland
  for_window [app_id="keepassxc"] floating enable
  for_window [title="."] title_format "%title"

### Output configuration

  output * bg $wallpaper fill
  # clamshell mode
  bindswitch --reload --locked lid:on output $laptop disable
  bindswitch --reload --locked lid:off output $laptop enable

### Input configuration

  input "type:keyboard" {
     xkb_options caps:escape
  }

### Key bindings
#
# Basics:
#
  # Start a terminal
  bindsym $mod+Return exec $term
  bindsym $mod+shift+Return exec $term $SHELL -c "tmuxinator start sanctum"
  bindsym $mod+ctrl+Return exec $term $SHELL -c "tmuxinator start system"

  # Kill focused window
  bindsym $mod+q kill

  # Start your launcher
  bindsym $mod+d exec $menu

  # Drag floating windows by holding down $mod and left mouse button.
  # Resize them with right mouse button + $mod.
  # Despite the name, also works for non-floating windows.
  # Change normal to inverse to use left mouse button for resizing and right
  # mouse button for dragging.
  floating_modifier $mod normal

  # Reload the configuration file
  bindsym $mod+Shift+c reload

  # Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+e exec swaynag -t "warning" -m "Exit Sway?" -b "Exit" "swaymsg exit" -b "Reload" "swaymsg reload"

#
# Moving around:
#

  # NEW OPTION IDEA:
  #
  # Takeover and Retreat
  #
  # A window can expand in a commanded direction incrementally pushing into 
  # windows/panels in its path.  The takeover panels squish and are saved
  # for restoration upon window retreat in the opposite direction. 

  # Move your focus around
  bindsym $mod+$left focus left
  bindsym $mod+$down focus down
  bindsym $mod+$up focus up
  bindsym $mod+$right focus right
  # Or use $mod+[up|down|left|right]
  bindsym $mod+Left focus left
  bindsym $mod+Down focus down
  bindsym $mod+Up focus up
  bindsym $mod+Right focus right

  # Move the focused window with the same, but add Shift
  bindsym $mod+Shift+$left move left
  bindsym $mod+Shift+$down move down
  bindsym $mod+Shift+$up move up
  bindsym $mod+Shift+$right move right
  # Ditto, with arrow keys
  bindsym $mod+Shift+Left move left
  bindsym $mod+Shift+Down move down
  bindsym $mod+Shift+Up move up
  bindsym $mod+Shift+Right move right
#
# Workspaces:
#
  # Switch to workspace
  bindsym $mod+1 workspace number 1
  bindsym $mod+2 workspace number 2
  bindsym $mod+3 workspace number 3
  bindsym $mod+4 workspace number 4
  bindsym $mod+5 workspace number 5
  bindsym $mod+6 workspace number 6
  bindsym $mod+7 workspace number 7
  bindsym $mod+8 workspace number 8
  bindsym $mod+9 workspace number 9
  bindsym $mod+0 workspace number 10
  # Move focused container to workspace
  bindsym $mod+Shift+1 move container to workspace number 1
  bindsym $mod+Shift+2 move container to workspace number 2
  bindsym $mod+Shift+3 move container to workspace number 3
  bindsym $mod+Shift+4 move container to workspace number 4
  bindsym $mod+Shift+5 move container to workspace number 5
  bindsym $mod+Shift+6 move container to workspace number 6
  bindsym $mod+Shift+7 move container to workspace number 7
  bindsym $mod+Shift+8 move container to workspace number 8
  bindsym $mod+Shift+9 move container to workspace number 9
  bindsym $mod+Shift+0 move container to workspace number 10
  # Note: workspaces can have any name you want, not just numbers.
  # We just use 1-10 as the default.
#
# Screenshot stuff:
#
  bindsym $mod+u exec grim -g "$(slurp)" $(xdg-user-dir PICTURES)/$(date +'%s_grim.png')
  bindsym $mod+y exec grim -g "$(slurp)" - | wl-copy
#
# Layout stuff:
#
  # You can "split" the current object of your focus with
  # $mod+b or $mod+v, for horizontal and vertical splits
  # respectively.
  bindsym $mod+b splith
  bindsym $mod+v splitv

  # Switch the current container between different layout styles
  bindsym $mod+s layout stacking
  bindsym $mod+w layout tabbed
  bindsym $mod+e layout toggle split

  # Make the current focus fullscreen
  bindsym $mod+f fullscreen

  # Toggle the current focus between tiling and floating mode
  bindsym $mod+Shift+space floating toggle

  # Swap focus between the tiling area and the floating area
  bindsym $mod+space focus mode_toggle

  # Move focus to the parent container
  bindsym $mod+a focus parent
#
# Scratchpad:
#
  # Sway has a "scratchpad", which is a bag of holding for windows.
  # You can send windows there and get them back later.

  # Move the currently focused window to the scratchpad
  bindsym $mod+Shift+minus move scratchpad

  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym $left resize shrink width 10px
      bindsym $down resize grow height 10px
      bindsym $up resize shrink height 10px
      bindsym $right resize grow width 10px

      # Ditto, with arrow keys
      bindsym Left resize shrink width 10px
      bindsym Down resize grow height 10px
      bindsym Up resize shrink height 10px
      bindsym Right resize grow width 10px

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $mod+r mode "resize"

#
# Hardware control:
#
  bindsym --locked XF86MonBrightnessDown exec brightnessctl set 10%-
  bindsym --locked XF86MonBrightnessUp exec brightnessctl set 10%+

  bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
  bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
  bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
  bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
  bindsym $mod+comma exec pactl set-sink-volume @DEFAULT_SINK@ -5%
  bindsym $mod+period exec pactl set-sink-volume @DEFAULT_SINK@ +5%
  bindsym $mod+slash exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
  bar {
      position top
      font "$statusFont 28"

      # When the status_command prints a new line to stdout, swaybar updates.
      # The default just shows the current date and time.
      status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
      status_padding 3

      colors {
          statusline $text
          background $midBackground
          focused_workspace $hiBackground $hiBackground $hideout
          inactive_workspace $midBackground $midBackground $prompt
          urgent_workspace $prompt $prompt $hideout
      }
  }

#
# Nag
#
  mode "nag" {
      bindsym {
          Ctrl+d    mode "default"

          Ctrl+c    exec $nag_exit
          q         exec $nag_exit
          Escape    exec $nag_exit

          Return    exec $nag_confirm

          Tab       exec $nag_select prev
          Shift+Tab exec $nag_select next

          Left      exec $nag_select next
          Right     exec $nag_select prev

          Up        exec $nag_select next
          Down      exec $nag_select prev
      }
  }


#
# Notifications
#

  bindsym $mod+n exec makoctl dismiss
  bindsym $mod+Shift+n exec makoctl dismiss --all

#
# lock
#
  bindsym $logoMod+l exec swaylock -f -i $wallpaper -s fill

#
# Final
#
include /etc/sway/config.d/*
